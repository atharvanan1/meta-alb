From 0441710b047ec3807275ea195a9a2bd2dbd68122 Mon Sep 17 00:00:00 2001
From: Catalin Udma <catalin-dan.udma@nxp.com>
Date: Fri, 11 Nov 2022 16:04:28 +0200
Subject: [PATCH] qemu-user: add syscall emulation through libc for getcwd

In QEMU 5.1, commit:
https://github.com/qemu/qemu/commit/0f6bb1958f3aae0171996941df7fb7ea7536bb12

updates getcwd to use the syscall directly instead of through libc using
getcwd() call.
When building in fakeroot environment this breaks the libc emulation and getcwd
usage when QEMU_LIBCSYSCALL option is enabled.

The fix updates getcwd usage to use getcwd() when QEMU_LIBCSYCALL is enabled,
while otherwise using the default behavior to call the syscall directly.

Signed-off-by: Catalin Udma <catalin-dan.udma@nxp.com>
---
 linux-user/syscall.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/linux-user/syscall.c b/linux-user/syscall.c
index 6e92a8c6d..2d2a8846a 100644
--- a/linux-user/syscall.c
+++ b/linux-user/syscall.c
@@ -271,6 +271,14 @@ static type name (type1 arg1)        \
 	return syscall(__NR_##name, arg1);    \
 }
 
+#define _libc_syscall2(type,name,namelibc,type1,arg1,type2,arg2)	\
+static type name (type1 arg1,type2 arg2)				\
+{									\
+	if (do_libcsyscall)							\
+		return namelibc(arg1, arg2);						\
+	return syscall(__NR_##name, arg1, arg2);				\
+}
+
 #define _libc_syscall3(type,name,namelibc,type1,arg1,type2,arg2,type3,arg3)  \
 static type name (type1 arg1,type2 arg2,type3 arg3)        \
 {                    \
@@ -439,7 +447,7 @@ static const bitmask_transtbl fcntl_flags_tbl[] = {
   { 0, 0, 0, 0 }
 };
 
-_syscall2(int, sys_getcwd1, char *, buf, size_t, size)
+_libc_syscall2(int, sys_getcwd1, getcwd, char *, buf, size_t, size)
 
 #if defined(TARGET_NR_utimensat) || defined(TARGET_NR_utimensat_time64)
 #if defined(__NR_utimensat)
-- 
2.25.1

