From 0d05aa33ef22702073f8fbefa257d7d6f16169d4 Mon Sep 17 00:00:00 2001
From: Heinz Wrobel <Heinz.Wrobel@nxp.com>
Date: Fri, 11 Nov 2022 13:55:20 +0200
Subject: [PATCH] qemu-user: seccomp handling was not checked properly and
 crashed

While it is not implemented properly still, it is now checked for
and rejected properly.

Signed-off-by: Heinz Wrobel <Heinz.Wrobel@nxp.com>
---
 linux-user/syscall.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/linux-user/syscall.c b/linux-user/syscall.c
index 87e8f7b92..379ec0460 100644
--- a/linux-user/syscall.c
+++ b/linux-user/syscall.c
@@ -33,6 +33,7 @@
 #include <sys/fsuid.h>
 #include <sys/personality.h>
 #include <sys/prctl.h>
+#include <linux/seccomp.h>
 #include <sys/resource.h>
 #include <sys/swap.h>
 #include <linux/capability.h>
@@ -10984,9 +10985,9 @@ static abi_long do_syscall1(void *cpu_env, int num, abi_long arg1,
 #endif /* AARCH64 */
         case PR_GET_SECCOMP:
         case PR_SET_SECCOMP:
-            /* Disable seccomp to prevent the target disabling syscalls we
-             * need. */
-            return -TARGET_EINVAL;
+            if (arg2 == SECCOMP_MODE_FILTER)
+                return -TARGET_EINVAL;
+            return get_errno(prctl(arg1, arg2, arg3, arg4, arg5));
         default:
             /* Most prctl options have no pointer arguments */
             return get_errno(prctl(arg1, arg2, arg3, arg4, arg5));
-- 
2.25.1

